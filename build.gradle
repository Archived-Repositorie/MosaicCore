plugins {
	id 'fabric-loom' version '1.3.8'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm'
	id "com.ncorti.ktfmt.gradle" version '0.12.0'
}

ktfmt {
	kotlinLangStyle()
}

loom {
	serverOnlyMinecraftJar()
}

repositories {
	maven { url "https://jitpack.io" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}.${project.kotlin_version}"
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

	String mixin_extras = "com.github.LlamaLad7:MixinExtras:${project.mixin_extras}"

	implementation(mixin_extras)
	annotationProcessor(mixin_extras)
	include(mixin_extras)
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = sourceCompatibility

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group
}


jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

ktfmt {
	kotlinLangStyle()
}

test {
	useJUnitPlatform()
}

tasks {
	test {
		systemProperty("fabric.side", "server")
	}
}

compileKotlin.kotlinOptions.jvmTarget = "17"
